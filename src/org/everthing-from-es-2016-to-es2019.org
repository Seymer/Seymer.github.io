#+TITLE: ECMAScript 2016 到 2019 的所有新功能

*** ES2016
Array.prototype.includes()
#+BEGIN_EXAMPLE
let array = [1,3,5,7,9,11]
// check if the element appears in our Array
array.includes(3); //true
array.includes(2); //false
// add an index as a second parameter
array.includes(3,1); //true
array.includes(5,4); //false
#+END_EXAMPLE

Exponential operator
#+BEGIN_EXAMPLE
//before
Math.pow(2,3);
//8

//now
2**3
//8
#+END_EXAMPLE

*** ES2017
padStart() & padEnd()
#+BEGIN_EXAMPLE
"hi".padStart(10);
// "          hi"
"hi".padEnd(10);
// "hi          "

//you are not limited to adding blank spaces
"hello".padEnd(13," Alberto");
// "hello Alberto"
#+END_EXAMPLE

Object.entries() & Object.values()
#+BEGIN_EXAMPLE
const family = {
  father: "Jonathan Kent",
  mother: "Martha Kent",
  son: "Clark Kent",
}
Object.Values(family);
// ["jonathan Kent", "Martha Kent", "Clark Kent"]
Object.entries(family);
// ["father", "Jonathan Kent"]
// ["mother", "Martha Kent"]
// ["son", "Clark Kent"]
#+END_EXAMPLE

Async & Await
#+BEGIN_EXAMPLE
function walk(amount) {
  return new Promise((resolve, reject) => {
    if (amout < 500) {
      reject("the value is too small");
    }
    setTimeout(() => resolve(walked for ${amount}ms), amount);
  });
}

//create an async function
async function go() {
  //use the keyword to wait for the response
  const res = await walk(500);
  console.log(res);
  const res2 = await walk(900);
  console.log(res2);
}
#+END_EXAMPLE

*** ES2018

*** ES2019
