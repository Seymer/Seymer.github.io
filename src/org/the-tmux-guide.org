#+TITLE: Tmux 学习笔记
link: http://tangosource.com/blog/a-tmux-crash-course-tips-and-tweaks/
** tmux 基础知识

By default, tmux uses *Ctrl-b* as the prefix key.
#+BEGIN_EXAMPLE
    <prefix> c: Create a new window (appears in status bar)
    <prefix> 0: Switch to window 0
    <prefix> 1: Switch to window 1
    <prefix> 2: Switch to window 2 (etc.)
    <prefix> x: Kill current window
    <prefix> d: Detach tmux (exit back to normal terminal)
#+END_EXAMPLE

To see all tmux sessions, you can enter:
#+BEGIN_EXAMPLE
    tmux ls
#+END_EXAMPLE

To attach to the last used session, you can enter:
#+BEGIN_EXAMPLE
    tmux a
#+END_EXAMPLE

To attach to a specific session, you can enter:
#+BEGIN_EXAMPLE
    tmux a -t <session-name>
#+END_EXAMPLE

You can also customize tmux by making a *.tmux.conf* file in your home directory.
#+BEGIN_EXAMPLE
    # remap prefix from 'C-b' to 'C-a'
    unbind C-b
    set-option -g prefix C-a
    bind-key C-a send-prefix

    #Start window numbering at 1
    set -g base-index 1
#+END_EXAMPLE

A few recommendations:
  1. 如果你还没有把 *ctrl* 键映射到 *caps-lock* 键，我建议你那么做。
     #+BEGIN_EXAMPLE
         unbind C-b
         set -g prefix C-a
     #+END_EXAMPLE
  2. *~/.tmux.conf* 文件只有在每次打开时才会读取更新，所以我建议：
     #+BEGIN_EXAMPLE
         # bind a reload key
         bind R source-file ~/.tmux.conf \; display-message "Config reloaded."
     #+END_EXAMPLE
     这样的话，你每次添加更新后，只需按 *Ctrl-b R* 重新加载配置即可。

Sessions
A tmux session can contain multiple windows, Sessions are a neat feature. To create a new session just run:

#+BEGIN_EXAMPLE
 tmux new -s <name-of-my-session>
#+END_EXAMPLE

To create a new session press *Ctrl-b :* and the enter the following command:
#+BEGIN_EXAMPLE
new -s <name-of-my-new-session>
#+END_EXAMPLE

*** Navigation through Tmux sessions
To get a list of the existing sessions, press *Ctrl-b s*

In the case that you are not in Tmux but you have one or more sessions running just use:

#+BEGIN_EXAMPLE
tmux attach
#+END_EXAMPLE

*** Fast text navigation and copying

**** Navigate text
Tmux allows for text navigation in a way that is very similar to Vim.

#+BEGIN_EXAMPLE
    # Use vim keybindings in copy mode
    setw -g mode-keys vi
#+END_EXAMPLE

**** Send copied text to System's clipboard
By default, when you copy text from Tmux, the text is only available to be inside that same Tmux session.
In order to make that text available to be pasted anywhere, you have to tell Tmux to copy to system's clipboard.

  1. Install *retach-to-user-namespace*, this is very easy with *brew*, just run the following command:
     
     #+BEGIN_EXAMPLE
         brew install reattach-to-user-namespace
     #+END_EXAMPLE
 
  2. Update ~/.tmux.conf file
     #+BEGIN_EXAMPLE
         # invoke reattach-to-user-namespace every time a new window/pane opens
         set-option -g default-command "reattach-to-user-namespace -l bash"
     #+END_EXAMPLE

**** Select and copy text
Now, follow these steps to copy that text:

  1. Enter copy mode: *ctrl-b [.*
  2. Start moving across the text as you would do in Vim: with j, k, l, h, etc..
  3. Once you get to the text you want to copy press the spacebar and start selecting text(exactly as you would do it in Vim).
  4. Once text is selected press *enter* key
  

**** Make text copying even more Vim-like
You can use *v* key to select text and *v* to copy it, just add and following to your *~/.tmux.conf* file:
#+BEGIN_EXAMPLE
 # start selecting text typing 'v' key (once you are in copy mode)
 bind-key  -t vi-copy v begin-selection
 # copy selected text to the system's clipboard
 bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
#+END_EXAMPLE

*** Effective pair programming
You can share the address of a Tmux session with someone else, and that person can connect to the session via *SSH*.
Since the connection runs over *SSH*, it will be very lightweight. For the user connecting to the remote Tmux session,
it will fell as if the session is running locally, providing the internet connection is fast enough.

**** Tmux with Tmate
Tmate is a tool that makes it very easy to create a Tmux session and share it with someone else over hte internet.
    1. Install Homebrew:
       #+BEGIN_EXAMPLE
       ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
       #+END_EXAMPLE

    2. Install Tmate
       #+BEGIN_EXAMPLE
           brew update   && \
           brew tap naviennot/tmate && \
           brew install tmate
       #+END_EXAMPLE

    3. Launch a new session with Tmate:
       #+BEGIN_EXAMPLE
       tmate
       #+END_EXAMPLE

    4. Copy the SSH URL given by Tmate on the Tmux session.

    5. Ask the other person to access via *SSH* using the URL you just copied.

       
*** Table Notes
| 命令                        | 属性                        |
|-----------------------------+-----------------------------|
| ctrl-b s                    | 列出当前tmux中的会话        |
| ctrl-b %                    | 垂直分割                    |
| ctrl-b "                    | 水平分割                    |
| ctrl-b ➡                    | 进入目标窗格                |
| ctrl-b c                    | 创建窗口                    |
| ctrl-b 0..!                 | 进入对应数字窗口            |
|-----------------------------+-----------------------------|
| tmux new -s name            | start new with session name |
| tmux a # (or at, or attach) | attach                      |
| tmux a -t name              | attach to nameed            |
| tmux ls                     | list sessions               |
| tmux kill-session -t name   | kill session                |



In tmux, hit the prefix *ctrl+b* (my modified prefix is *ctrl+a*) and then:

*Sessions*
#+BEGIN_EXAMPLE
  :new<CR> new session
  s list sessions
  $ name session
#+END_EXAMPLE

*Windows(tabs)*
#+BEGIN_EXAMPLE
  c create window
  w list windows
  n nest window
  p previous window
  f find window
  , name window
  & kill window
#+END_EXAMPLE

*Panes(splits)*
#+BEGIN_EXAMPLE
  % vertical split
  " horizontal split

  o swap panes
  q show pane numbers
  x kill pane
  + break pane into window (e.g. to select text by mouse to copy)
  - restore pane from window

  <prefix> q (show pane numbers, when the numbers show up type the key to goto that pane)
  <prefix> { (move the current pane left)
  <prefix> } (move the current pane right)
  <prefix> z toggle pane zoom
#+END_EXAMPLE

*Misc*
#+BEGIN_EXAMPLE
  d detach
  t big clock
  ? list shortcuts
  : prompt
#+END_EXAMPLE


